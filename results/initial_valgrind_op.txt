$ valgrind ./app/shell-app 
==18701== Memcheck, a memory error detector
==18701== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==18701== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==18701== Command: ./app/shell-app
==18701== Parent PID: 14949
==18701== 
==18701== Conditional jump or move depends on uninitialised value(s)
==18701==    at 0x109D68: main (main.cpp:9)
==18701== 
==18701== 
==18701== HEAP SUMMARY:
==18701==     in use at exit: 44 bytes in 2 blocks
==18701==   total heap usage: 4 allocs, 2 frees, 73,772 bytes allocated
==18701== 
==18701== LEAK SUMMARY:
==18701==    definitely lost: 24 bytes in 1 blocks
==18701==    indirectly lost: 20 bytes in 1 blocks
==18701==      possibly lost: 0 bytes in 0 blocks
==18701==    still reachable: 0 bytes in 0 blocks
==18701==         suppressed: 0 bytes in 0 blocks
==18701== Rerun with --leak-check=full to see details of leaked memory
==18701== 
==18701== For counts of detected and suppressed errors, rerun with: -v
==18701== Use --track-origins=yes to see where uninitialised values come from
==18701== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

$ valgrind --leak-check=full ./app/shell-app
==18731== Memcheck, a memory error detector
==18731== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==18731== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==18731== Command: ./app/shell-app
==18731== 
Averaged sensor reading: 10
==18731== Conditional jump or move depends on uninitialised value(s)
==18731==    at 0x109D68: main (main.cpp:9)
==18731== 
==18731== 
==18731== HEAP SUMMARY:
==18731==     in use at exit: 44 bytes in 2 blocks
==18731==   total heap usage: 4 allocs, 2 frees, 73,772 bytes allocated
==18731== 
==18731== 44 (24 direct, 20 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 2
==18731==    at 0x4C3217F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==18731==    by 0x109EA2: AnalogSensor::Read() (AnalogSensor.cpp:16)
==18731==    by 0x109D44: main (main.cpp:7)
==18731== 
==18731== LEAK SUMMARY:
==18731==    definitely lost: 24 bytes in 1 blocks
==18731==    indirectly lost: 20 bytes in 1 blocks
==18731==      possibly lost: 0 bytes in 0 blocks
==18731==    still reachable: 0 bytes in 0 blocks
==18731==         suppressed: 0 bytes in 0 blocks
==18731== 
==18731== For counts of detected and suppressed errors, rerun with: -v
==18731== Use --track-origins=yes to see where uninitialised values come from
==18731== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

